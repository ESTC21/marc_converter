This file is part of the ESTC Record Importer package, a server 
daemon that processes incoming MARC cataloging data stored in binary
MARC, .csv, and .txt formats, checks the records for scope on date,
language, and place of publication, and exports the filtered
records as RDF suitable for linked data exchange.

The ESTC Record Importer is free software: you can redistribute it 
and/or modify it under the terms of the GNU General Public License 
as published by the Free Software Foundation, either version 3 of 
the License, or (at your option) any later version.

A copy of the GNU General Public License is included with this  
distribution.  An online copy of the license can be found at
http://www.gnu.org/licenses/

Development of this software was made possible through funding from 
the Andrew W. Mellon Foundation which maintains a nonexclusive, 
royalty-free, worldwide, perpetual, irrevocable license to distribute 
this software either in wholoe or in part for scholarly and educational 
purposes.

Copyright, 2016, Carl Stahmer http://www.carlstahmer.com



CONFIGURATION:
--------------

--configuration values must be set in config.yml

--You must also indicate via command line at run time whether to run an
-import or -export.  The complete list of values that may be set at run
time are:

	 * <p>Requires the presence of a config.yml file in the application root to run. 
	 * Values in config.yml can be overwritten at runtime via unix style command line
	 * arguments as defined in the parameters section of this documentation.  The
	 * config.yml file must be in place even if you supply other configuration 
	 * information via the command line.</p>
	 *
	 * @param  	-listendir		/full/directory/path/of/listen/directory
	 * @param  	-writedir  		/full/directory/path/of/output/directory (Deprecated)
	 * @param	-export			flag to run in ESTC RDF export mode
	 * @param	-exportJena		flag to run in Jena RDF export mode
	 * @param 	-orgcode		the marc org code to use in constructing the new records
	 * @param	-runinterval	the interval to wait between listening attempts
	 * @param 	-dbserver		the name of the database server
	 * @param 	-dbname			the database name
	 * @param 	-dbuser			the database user
	 * @param 	-dbpass			the database password
	 * @param	-debug			flag to run in debug mode
	 * @param	-console		flag to run log output to console instead of database
	 * @param 	-help			flag to return help text

--flags sent via command line override values in config.yml

PERFORMING IMPORT AND EXPORT:
-----------------------------

NOTE THAT BEFORE YOU CAN RUN THIS APPLICATION OUTSIDE OF AN IDE (LIKE
ECLIPSE) YOU WILL NEED TO CREATA A .jar FILE FOR RUNNING.

The application works in two stages: Import and Export.  The Import phase
reads MARC records in and writes them to a SQL database.  The Export pase 
outputs the data in the MARC to the desired format.  

The import tracks changes in records, so if you point it at a collection of
MARC records it will only process records in the collection that are new or
have changed since the last import.  This allows you to setup the system to
periodically process a collection and not create processing redundancy.

To run an import process first make sure that all of the appropriate values
are set in the config.yml file as defined above and then run:

java -jar name_of_jar_file.jaR

To run an export process first make sure that all of the appropriate values
are set in the config.yml file as defined above and then run:

java -jar name_of_jar_file.jar -export

























